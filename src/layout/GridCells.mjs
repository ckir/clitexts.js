
// From https://github.com/vorg/grid-cells

/* 
Computes grid cells coordinates

Usage
grid(width, height, numCellsX, numCellsY, margin)

Returns: List of numCellsX * numCellsY rectangles. [[x, y, w, h], ...]
Example

                                                                                                                                                                
.``````````````````''``````````````````'```````````````````'``````````````````` 
``.................`:'.................,,.................':`.................".
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`'                 ',                  ""                  ,'                 ^.
'"^^^^^^^^^^^^^^^^^^,^^^^^^^^^^^^^^^^^^",^^^^^^^^^^^^^^^^^^,"^^^^^^^^^^^^^^^^^,.
'"^^^^^^^^^^^^^^^^^^,^^^^^^^^^^^^^^^^^^",^^^^^^^^^^^^^^^^^^,"^^^^^^^^^^^^^^^^^,.
`'                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
`.                 ',                  ""                  ,'                 ^.
``.................`:'.................,,.................':`.................".
.``````````````````''``````````````````'```````````````````'``````````````````` 

To get a grid like in the screenshot above

var cells = grid(1024, 512, 4, 2, 10);
console.log(cells[0]); //-> [ 10, 10, 243, 241 ]
*/

export default function gridCells(w, h, nw, nh, margin) {
    margin = margin || 0
    var cw = (w - margin - margin * nw) / nw
    var ch = (h - margin - margin * nh) / nh
    var cells = []
    for (var y = 0; y < nh; ++y) {
        for (var x = 0; x < nw; ++x) {
            cells.push([
                x * cw + (x + 1) * margin,
                y * ch + (y + 1) * margin,
                cw,
                ch
            ])
        }
    }
    return cells
}

// const cells = gridCells(1024, 512, 4, 2, 10);
// console.log(cells[0]); //-> [ 10, 10, 243, 241 ]